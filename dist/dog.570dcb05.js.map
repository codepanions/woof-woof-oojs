{"version":3,"sources":["src/dog.js"],"names":["Dog","id","allDogs","find","dog","updatedDogData","pupToUpdate","findDog","name","image","isGoodDog","dogDataObj","push","isGoodDogString"],"mappings":";;;;;;IAAMA;;;AACJ;4BACeC,IAAI;AACjB,aAAO,KAAKC,OAAL,CAAaC,IAAb,CAAkB,UAACC,GAAD;AAAA,eAASA,GAAG,CAACH,EAAJ,KAAWA,EAApB;AAAA,OAAlB,CAAP,CADiB,CACgC;AAClD;;;8BAEgBI,gBAAgB;AAC/B,UAAMC,WAAW,GAAG,KAAKC,OAAL,CAAaF,cAAc,CAACJ,EAA5B,CAApB,CAD+B,CACqB;;AACpDK,MAAAA,WAAW,CAACE,IAAZ,GAAmBH,cAAc,CAACG,IAAlC;AACAF,MAAAA,WAAW,CAACG,KAAZ,GAAoBJ,cAAc,CAACI,KAAnC;AACAH,MAAAA,WAAW,CAACI,SAAZ,GAAwBL,cAAc,CAACK,SAAvC;AACA,aAAOJ,WAAP,CAL+B,CAKZ;AACpB;;;AAED,eAAYK,UAAZ,EAAwB;AAAA;;AACtB,SAAKV,EAAL,GAAUU,UAAU,CAACV,EAArB;AACA,SAAKO,IAAL,GAAYG,UAAU,CAACH,IAAvB;AACA,SAAKC,KAAL,GAAaE,UAAU,CAACF,KAAxB;AACA,SAAKC,SAAL,GAAiBC,UAAU,CAACD,SAA5B;AACAV,IAAAA,GAAG,CAACE,OAAJ,CAAYU,IAAZ,CAAiB,IAAjB;AACD;;;;iCAEY;AACX,uCAAyB,KAAKX,EAA9B,gBAAqC,KAAKO,IAA1C;AACD;;;oCAEe;AACd,UAAMK,eAAe,GAAG,KAAKH,SAAL,GAAiB,WAAjB,GAA+B,UAAvD;AACA,kCAAoB,KAAKD,KAAzB,iCACY,KAAKD,IADjB,sCAEgBK,eAFhB,mEAGsC,KAAKZ,EAH3C;AAKD;;;;;;AAGHD,GAAG,CAACE,OAAJ,GAAc,EAAd,EAAiB","file":"dog.570dcb05.js","sourceRoot":"..","sourcesContent":["class Dog {\n  // `static` creates a class method in the form `Dog.methodName()`.\n  static findDog(id) {\n    return this.allDogs.find((dog) => dog.id === id) // `this` will be Dog when invoked like `Dog.findDog(1)`.\n  }\n\n  static updateDog(updatedDogData) {\n    const pupToUpdate = this.findDog(updatedDogData.id) // If we invoke `Dog.updateDog(newDogJSON)`, `this` will be Dog class.\n    pupToUpdate.name = updatedDogData.name\n    pupToUpdate.image = updatedDogData.image\n    pupToUpdate.isGoodDog = updatedDogData.isGoodDog\n    return pupToUpdate // Return the updated dog instance for method chaining (i.e. `pupToUpdate.renderSpan()`, `pupToUpdate.renderDetails()`, etc.).\n  }\n\n  constructor(dogDataObj) {\n    this.id = dogDataObj.id\n    this.name = dogDataObj.name\n    this.image = dogDataObj.image\n    this.isGoodDog = dogDataObj.isGoodDog\n    Dog.allDogs.push(this)\n  }\n\n  renderSpan() {\n    return `<span data-id=\"${this.id}\">${this.name}</span>`\n  }\n\n  renderDetails() {\n    const isGoodDogString = this.isGoodDog ? 'Good Dog!' : 'Bad Dog!'\n    return `<img src=\"${this.image}\" >\n          <h2>${this.name}</h2>\n          <button>${isGoodDogString}</button>\n          <button class=\"edit\" data-id=\"${this.id}\" data-action=\"edit\">Edit this Dog!</button>\n          `\n  }\n}\n\nDog.allDogs = [] // Recall that an ES6 class is just a function. Functions are also objects (object is part of their prototype chain), therefore, we can set key/value pairs on a function just like we can on any other object.\n"]}