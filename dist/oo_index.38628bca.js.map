{"version":3,"sources":["src/oo_index.js"],"names":["document","addEventListener","dogBar","querySelector","dogInfo","dogForm","dogNameInput","dogImgInput","goodDogInput","fetch","then","resp","json","dogDataJSON","forEach","dog","newPup","Dog","innerHTML","renderSpan","e","clickedDogId","parseInt","target","dataset","id","foundDog","findDog","renderDetails","className","action","console","log","value","name","image","checked","isGoodDog","preventDefault","updateDogId","method","headers","body","JSON","stringify","r","updatedDogJSON","updatedPup","updateDog"],"mappings":"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","file":"oo_index.38628bca.js","sourceRoot":"..","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  const dogBar = document.querySelector('#dog-bar')\n  const dogInfo = document.querySelector('#dog-info')\n  const dogForm = document.querySelector('#dog-form')\n  const dogNameInput = document.querySelector('#dog-name-input')\n  const dogImgInput = document.querySelector('#dog-img-input')\n  const goodDogInput = document.querySelector('#good-dog-input')\n\n// INITIAL FETCH\n  fetch('http://localhost:3000/pups')\n    .then(resp => resp.json())\n    .then(dogDataJSON => {\n      dogDataJSON.forEach(dog => {\n        const newPup = new Dog(dog)\n        dogBar.innerHTML += newPup.renderSpan()\n      })\n    })\n\n// RENDER DETAILS OF CLICKED DOG\n    dogBar.addEventListener('click', (e) => {\n      const clickedDogId = parseInt(e.target.dataset.id)\n      const foundDog = Dog.findDog(clickedDogId)\n      dogInfo.innerHTML = foundDog.renderDetails()\n    })\n\n// CLICK EDIT DOG + PRE-FILL FORM\n    dogInfo.addEventListener('click', (e) => {\n      if (e.target.className === 'edit' || e.target.dataset.action === 'edit') {\n        console.log(e.target)\n        const clickedDogId = parseInt(e.target.dataset.id)\n        const foundDog = Dog.findDog(clickedDogId) // Find the dog object based on the id found in the clicked edit button.\n        // Pre-fill the form data.\n        dogNameInput.value = foundDog.name\n        dogImgInput.value = foundDog.image\n        goodDogInput.checked = foundDog.isGoodDog\n        dogForm.dataset.id = foundDog.id // Store the dog id in the form so we can PATCH with that id later.\n      }\n    })\n\n// PATCH REQUEST TO UPDATE DOG\n    dogForm.addEventListener('submit', (e) => {\n      e.preventDefault()\n      const updateDogId = e.target.dataset.id // We don't need to parseInt because we are interpolating the id into a URL string.\n      fetch(`http://localhost:3000/pups/${updateDogId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json' // MIME type we're sending to the server.\n        },\n        body: JSON.stringify({\n          // The form inputs were stored in variables at the top of DOMContentLoaded event handler. (This is a callback function.)\n          name: dogNameInput.value,\n          image: dogImgInput.value,\n          isGoodDog: goodDogInput.checked\n        })\n      })\n      .then((r) => r.json())\n      .then((updatedDogJSON) => {\n        const updatedPup = Dog.updateDog(updatedDogJSON) // Delegate updating dogs to the Dog class.\n        dogInfo.innerHTML = updatedPup.renderDetails() // Render the changes so the DOM is in sync with our data.\n      })\n    })\n})\n"]}